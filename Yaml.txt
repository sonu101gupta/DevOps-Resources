This file is dedicated for the YAML related resources and the content.


1. Basic Structure: YAML files consist of key-value pairs, where each key is followed by a colon and a space, then the corresponding value. YAML uses indentation to represent structure, similar to Python.

2. Data Types: YAML supports several data types:

Scalars: Strings, numbers, and booleans.
Lists: Ordered sequences of elements.
Maps: Unordered collections of key-value pairs.
Null: Represents a null value.
3. Comments: Comments in YAML start with the hash symbol (#) and continue until the end of the line.

4. Indentation: YAML uses indentation to indicate structure. Nested elements are indented further than their parent elements. Spaces are typically used for indentation, and the number of spaces doesn't matter as long as it's consistent.

Examples:

yaml
# Example of a YAML document
person:
  name: John Doe
  age: 30
  is_student: false
  hobbies:
    - reading
    - hiking
  address:
    street: 123 Main St
    city: Anytown
    zip: 12345
5. Lists and Maps: YAML uses dashes (-) to denote items in a list and colons (:) for key-value pairs in a map. For example:

yaml
fruits:
  - apple
  - banana
  - orange
6. Quoting Strings: Strings don't necessarily need to be quoted, but you can use single or double quotes if necessary, especially when the string contains special characters or starts with characters that could be interpreted as something else in YAML. For example:

yaml
7. message: "This is a string with spaces and special characters: !@#$%^&*()"
8. Multi-line Strings: You can represent multi-line strings in YAML using a pipe (|) for a block scalar. This preserves newlines and leading/trailing whitespace. For example:

yaml
description: |
  This is a multi-line
  string in YAML.
  It preserves newlines
  and indentation.
9. Anchors and Aliases: YAML allows you to reuse values using anchors (&) and aliases (*). This is useful for reducing redundancy in your YAML files. For example:

yaml
defaults: &defaults
  timeout: 30
  max_retries: 3

10. production:
  <<: *defaults
  server: example.com


